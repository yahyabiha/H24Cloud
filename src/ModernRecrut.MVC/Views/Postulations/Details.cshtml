@using Microsoft.AspNetCore.Identity;
@using ModernRecrut.MVC.Areas.Identity.Data;
@using ModernRecrut.MVC.Interfaces;
@inject UserManager<Utilisateur> _userManager
@inject IOffreEmploisService _offreEmploisService;
@model ModernRecrut.MVC.Models.Postulation

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Postulation</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            Nom du candidat
        </dt>
        <dd class = "col-sm-10">
            @{ Utilisateur candidat = await _userManager.FindByIdAsync(Model.CandidatId);}
            @Html.DisplayFor(model => candidat.NomComplet)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.OffreDEmploiId)
        </dt>
        <dd class = "col-sm-10">
            @{ OffreEmploi offreEmploi = await _offreEmploisService.ObtenirSelonId(Model.OffreDEmploiId);}
            @Html.DisplayFor(model => offreEmploi.Poste)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PretentionSalariale)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PretentionSalariale)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateDisponibilite)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateDisponibilite)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Modifier", "Edit", new { id = Model.Id }) |
    <a asp-action="ListePostulations">Retour à la liste des postulations</a>
</div>
